#diff -up dwm-6.2/config.def.h dwm-6.2a/config.def.h
#--- dwm-6.2/config.def.h	2019-02-02 10:55:28.000000000 -0200
#+++ dwm-6.2a/config.def.h	2021-02-22 21:54:56.649642880 -0300
#@@ -84,6 +84,10 @@ static Key keys[] = {
      #{ MODKEY,                       XK_period, focusmon,       {.i = +1 } },
      #{ MODKEY|ShiftMask,             XK_comma,  tagmon,         {.i = -1 } },
      #{ MODKEY|ShiftMask,             XK_period, tagmon,         {.i = +1 } },
#+	{ MODKEY,                       XK_j,      viewtoleft,     {0} },
#+	{ MODKEY,                       XK_k,      viewtoright,    {0} },
#+	{ MODKEY|ShiftMask,             XK_j,	   tagtoleft,      {0} },
#+	{ MODKEY|ShiftMask,             XK_k,	   tagtoright,     {0} },
      #TAGKEYS(                        XK_1,                      0)
      #TAGKEYS(                        XK_2,                      1)
      #TAGKEYS(                        XK_3,                      2)
diff -up dwm-6.2/dwm.1 dwm-6.2a/dwm.1
--- dwm-6.2/dwm.1	2019-02-02 10:55:28.000000000 -0200
+++ dwm-6.2a/dwm.1	2021-02-22 21:49:50.724665419 -0300
@@ -77,6 +77,18 @@ Send focused window to previous screen,
 .B Mod1\-Shift\-.
 Send focused window to next screen, if any.
 .TP
+.B Mod1\-k
+Focus tag on the right, if any.
+.TP
+.B Mod1\-j
+Focus tag on the left, if any.
+.TP
+.B Mod1\-Shift\-k
+Send focused window to tag on the right, if any.
+.TP
+.B Mod1\-Shift\-j
+Send focused window to tag on the left, if any.
+.TP
 .B Mod1\-b
 Toggles bar on and off.
 .TP
diff -up dwm-6.2/dwm.c dwm-6.2a/dwm.c
--- dwm-6.2/dwm.c	2019-02-02 10:55:28.000000000 -0200
+++ dwm-6.2a/dwm.c	2021-02-22 21:50:12.544663811 -0300
@@ -208,6 +208,8 @@ static void sigchld(int unused);
 static void spawn(const Arg *arg);
 static void tag(const Arg *arg);
 static void tagmon(const Arg *arg);
+static void tagtoleft(const Arg *arg);
+static void tagtoright(const Arg *arg);
 static void tile(Monitor *);
 static void togglebar(const Arg *arg);
 static void togglefloating(const Arg *arg);
@@ -227,6 +229,8 @@ static void updatetitle(Client *c);
 static void updatewindowtype(Client *c);
 static void updatewmhints(Client *c);
 static void view(const Arg *arg);
+static void viewtoleft(const Arg *arg);
+static void viewtoright(const Arg *arg);
 static Client *wintoclient(Window w);
 static Monitor *wintomon(Window w);
 static int xerror(Display *dpy, XErrorEvent *ee);
@@ -1847,6 +1851,28 @@ updateclientlist()
 				(unsigned char *) &(c->win), 1);
 }
 
+void
+tagtoleft(const Arg *arg) {
+	if(selmon->sel != NULL
+	&& __builtin_popcount(selmon->tagset[selmon->seltags] & TAGMASK) == 1
+	&& selmon->tagset[selmon->seltags] > 1) {
+		selmon->sel->tags >>= 1;
+		focus(NULL);
+		arrange(selmon);
+	}
+}
+
+void
+tagtoright(const Arg *arg) {
+	if(selmon->sel != NULL
+	&& __builtin_popcount(selmon->tagset[selmon->seltags] & TAGMASK) == 1
+	&& selmon->tagset[selmon->seltags] & (TAGMASK >> 1)) {
+		selmon->sel->tags <<= 1;
+		focus(NULL);
+		arrange(selmon);
+	}
+}
+
 int
 updategeom(void)
 {
@@ -2044,6 +2070,28 @@ view(const Arg *arg)
 	arrange(selmon);
 }
 
+void
+viewtoleft(const Arg *arg) {
+	if(__builtin_popcount(selmon->tagset[selmon->seltags] & TAGMASK) == 1
+	&& selmon->tagset[selmon->seltags] > 1) {
+		selmon->seltags ^= 1; /* toggle sel tagset */
+		selmon->tagset[selmon->seltags] = selmon->tagset[selmon->seltags ^ 1] >> 1;
+		focus(NULL);
+		arrange(selmon);
+	}
+}
+
+void
+viewtoright(const Arg *arg) {
+	if(__builtin_popcount(selmon->tagset[selmon->seltags] & TAGMASK) == 1
+	&& selmon->tagset[selmon->seltags] & (TAGMASK >> 1)) {
+		selmon->seltags ^= 1; /* toggle sel tagset */
+		selmon->tagset[selmon->seltags] = selmon->tagset[selmon->seltags ^ 1] << 1;
+		focus(NULL);
+		arrange(selmon);
+	}
+}
+
 Client *
 wintoclient(Window w)
 {
